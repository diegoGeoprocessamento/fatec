--- WEB MAP SERVICE ---
Representação visual dos daos espaciais e não os dados em si.
Representação no formato de imagens.

Solicitação:
URL contendo o endereço do serviço no servidor e parâmetros indicando as camadas
do mapa, bounding box, tamanho da imagem e termos de consulta.
Resposta:
Mapa no formato de imagem.

Operações WMS
Obrigatórias: GetCapabilities e GetMap
Opcionais: GetFeatureInfo, DescribeLayer e GetLegendGraphic

--- WEB FEATURE SERVICE ---
feições = geometria + atributo
Formato GML

Implementações:
Básica: Consulta e recuperação de dados.
Transacional: permite também, inserção, exclusão e edição.

Solicitação:
URL contendo o endereço do serviço no servidor e parâmetros indicando as camadas
do mapa, bounding box, tamanho da imagem e termos de consulta.
Resposta:
Mapa no formato vetorial como GML, KML ou shapefile.

Operações WFS
GetCapabilities, DescribeFeatureType, GetFeature
Operações WFST
LockFeature
Transaction

--- GEO-CAMPOS E GEO-OBJETOS ---
Geo-campos: Fenômenos contínuos
geo-objetos: Fenômenos discretos

--- COVERAGE ---
representação digital de fenômenos no espaço-tempo

--- WEB COVERAGE SERVICE ---
Dados GeoTiff e GML

--- GEOGRAPHIC MARKUP LANGUAGE ---
Codificação XML para transporte e armazenamento de dados geográficos

--- KEYHOLE MARKUP LANGUAGE ---
Transporta, armazena e visualiza dados geográficos

--- GeoJSON ---
JSON = Formato de dados que suporta a criação de objetos na linguagem JavaScript
Formato alternativo ao XML

--- STYLED LAYER DESCRIPTOR ---
Arquivo XML que possui a formatação de como os objetos geográficos
serão apresentados no mapa

--- GEOSERVER ---
Ferramenta para compartilhamento de dados espaciais
Implementação de referência dos padrões WFS e WCS do OGC bem como WMS

O geoserver organiza os dados em worspaces, dentro de cada worspaces
existem camadas

workspaces são espaços de trabalho
dentros destes espaços de trabalho existem containers 
para agruapar as camadas e stores do mesmo tipo.

Worspace
até 10 caracteres / sem espaço e caracteres especiais
Fornecer a URI, a URI é semelhante a uma URL a diferença
é que a URI não precisa endereçar um recurso válido, basta somente que seja único
no contexto do Geoserver.

Stores
Contém as configurações necessárias para se conectar a uma fonte de dados.
A fonte de daods pode ser um arquivo, grupo de arquivos, tabela do BD ou um raster.
possibilita que os parâmetros de conexão com uma fonte de daods sejam definidos uma única vez
e utilizados em várias camadas.

Worspace
É um Container para agrupar camadas e sotores
URI - é semelhante a uma URL, a diferença é que o URI não precisa endereçar um recurso válido,
basta que se único no contexoto do geoserver.

Quando criado um workspace no geoserver ao mesmo tempo é criado uma pasta no diretório
do computador: C:\Program Files (x86)\GeoServer 2.12.1\data_dir\worspaces

Stores
Fonte de dados que contém a configuração necessária para se concetar a uma fonte de dados.
raster file - vector file - vector database - vector server WFS

Quando criado um store no geoserver ao mesmo tempo é criado um arquivo XML com as configurações
de acesso: C:\Program Files (x86)\GeoServer 2.12.1\data_dir\workspaces\test-jacarei\sql-server-geoserver
Arquivo : datastore.xml

Layers
Conjunto de dados raster ou vetorial que representa uma coleção de feições geográficas.

Vetor = Feature Types
Raster Coverage

O nome da camada é utilizado para pegar o JPEG da camada

Quando criado um layer no geoserver ao mesmo tempo é criado uma pasta com os arquivos no diertório
do computador: C:\Program Files (x86)\GeoServer 2.12.1\data_dir\workspaces\test-jacarei\sql-server-geoserver\jacarei-pol
Arquivos: featuretype.xml e layer.xml

Para verifiar as capacidades dos serviços WMS e WFS

http://localhost:8080/geoserver/test-jacarei/wms?service=WMS&version=1.1.0&request=GetCapabilities
http://localhost:8080/geoserver/test-jacarei/wfs?service=WMS&version=1.1.0&request=GetCapabilities

Estilos
Para criar estilos pode-se usar o Qgis para criar arquivos Styled Layer Descriptor (SLD) padrões OGC
CSS ou YSLD

Para adicionar um estilo para uma camada no geoserver deve-se acessar o menu styles

Quando criado um estilo no geoserver ao mesmo tempo é criado um arquivo em uma pasta no diretório
do computador: C:\Program Files (x86)\GeoServer 2.12.1\data_dir\workspaces\test-jacarei\styles

Após criar o estilo pode-se alterar o estilo das camadas editando as mesmas na aba publish

*Combinar Camadas
Na URL de acesso ao serviço, o parâmetro layers pode receber várias camadas, as mesmas devem
ser separadas por vírgulas. A ordem das camadas na URL determina a ordem no mapa.

http://localhost:8080/geoserver/test-jacarei/wms?service=WMS&version=1.1.0&request=GetMap&layers=test-jacarei:jacarei-pol,test-jacarei:jacarei-point&styles=&bbox=-46.3631041261475,-23.5417840610587,-45.6121482308441,-22.8165977151248&width=768&height=741&srs=EPSG:4326&format=application/openlayers

*SQL Views
A store deve apontar para um recurso de BD.

Na opção de layers pode-se criar camadas baseadas em consultas SQL em SQL View
select * from tbreg where tipo = 'asfalto'
Após a confirmação de infomrçaões gerais do layer o mesmo é criado conforme a consulta

Também pode-se criar views que recebem parâmetros na URL
select * from tbreg where tipo = '%to%'

Deve-se informar o parÂmetro do SQL e um valor padrão, será gerada uma expressão regular de validação
Em seguida deve-se averiguar o SRID e marcar a opção da chave primária

Na URL deve-se usar o parâmetro &viewparams no formato key:value cada key:value deve ser separada por ;
http://localhost:8080/geoserver/test-jacarei/wms?service=WMS&version=1.1.0&request=GetMap&layers=test-jacarei:jacarei-tipo&styles=&bbox=-46.079340921586805,-23.3839604676792,-45.8300590833988,-23.2135795357284&width=768&height=524&srs=EPSG:4326&format=application/openlayers&viewparams=to:asfalto
Selecionar os pontos com tipo asfalto

Para a expressão regular de expressão aceitar caracteres especiais os mesmo devem ser informados
^[\w\s|é|ã]+$
aceita é e ã

Mais utilizados:
\d digitos 0-9
\s caractere de espaço, tabulação e quebra de linha
\w qualquer letra 
| indica ou

http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html
Link para termos que podem ser usados em expressões

http://regexr.com/
Link para testar expressões

Também pode-se formartar as views parametizadas para conter trechos da cláusula
select * from tbreg %onde%
Assim pode-se informar o parâmetro where por exemplo

Para valor padrão pode-se desixar where true para pegar todos os valores
http://localhost:8080/geoserver/test-jacarei/wms?service=WMS&version=1.1.0&request=GetMap&layers=test-jacarei:jacarei-tipo&styles=&bbox=-46.079340921586805,-23.3839604676792,-45.8300590833988,-23.2135795357284&width=768&height=524&srs=EPSG:4326&format=application/openlayers&viewparams=onde:where tipo like 'asfalto'

Desta forma pode-se utilizar constultas espaciais também.

--- CQL Common Query Language ---

Ao contrário da linguagem de codificação de filtro baseada em XML o CQL é escrito usando uma sintaxe
mais próxima ao SQL.

O CQL tem algumas limitações, porém o Geoserver fornece uma versão extendida o ECQL.
O Geoserver suporta o uso de CQL e ECQL em solicitações WMS e WFS, bem como em arquivos SLD.

A interface openlayers possui um campo que permite a entrada de filtros CQL.

Pode-se incluir expressões com and ou or nos filtros:
tipo like '%poste%' or tipo = 'esgoto'

Pode-se selecionar feições com a expressão in:
tipo in ('poste','asfalto')

Pode-se também selecionar em razão do id:
in ('tipo.25','tipo.33')

As geometrias podem ser acessadas com a expressão geom (quando o layer pe proveniente de um BD) e
the_geom (quando é proveniente de um shapefile).

A função bbox é usada para filtrar as geometrias que fazem intersecção com um box:
bbox(geom,-46,-23,-44,-22)
bbox(the_geom,46,-23,-44,-22)

--- Funções CQL

Relação Espacial entre geometrias:

contains(geom,geom):boolean
crosses(geom,geom):boolean
disjoint(geom,geom):boolean
equalsExact(geom,geom):boolean
intesects(geom,geom):boolean
isWithinDistance(geom,geom,double):boolean
overlaps(geom,geom):boolean
touches(geom,geom):boolean
within(geom,geom):boolean

Geométricas:

area(geom):double
boundary(geom):geom
buffer(geom,double):geom
centroid(geom:geom
convexHull(geom):geom
diffrence(geom,geom):double
envelope(geom):geom
geomFromWKT(wkt):geom
geomLength(geom):double
getX(Point):double
getY(Point):double
intersection(geom,geom):geom
toWKT(geom):wkt
union(geom,geom):geom

**** Extensão Cross-layer filtering ****

Para usar filtros que usam duas camadas, tem-se que instalar a extensão querylayer.
https://sourceforge.net/projects/geoserver/files/GeoServer/2.12.1/extensions/
Baixar o arquivo geoserver-2.12.1-querylayer-plugin.zip
*Baixar conforme a versão do geoserver

Colar o arquivo em:
C:\Program Files (x86)\GeoServer 2.12.1\webapps\geoserver\WEB-INF\lib
Parar e iniciar o geoserver para as configurações terem efeito.

--- Filtros Cross-layer ---

Possibilita usar duas camadas na expressão.
O módulo querylayer adiciona funções para selecionar geometrias de uma camada secundária, ou seha, funções
para serem usadas dentro de outra expressão de filtragem.

intersects(geom,querySingle('test-jacarei:jacarei','geom','tipo=''poste'''))
* para usar aspas simples dentro de aspas simples deve-se utilizar duas aspas simples ''poste''

querySingle(layer,atributo,filtro) retorna uma geometria que satisfaz a consulta

queryCollection(layer,atributo,filtro) retorna uma lista de geometrias que satisfazem a consulta

collectGeometries(lista de geometrias) converte uma lista de geometrias em uma única geometria
intersects(geom, collectGeometries(queryCollection('aula:bacia','the_geom','NOME ilike ''%tal%'''))) 

// CQL Filter na URL //

Um filtro pode ser incluído diretamente na URL utilizando o parâmetro cql_filter
http://localhost:8080/geoserver/aula/wms?service=WMS&version=1.1.0&request=GetMap&layers=aula:municipio&bbox=-70,-33.9,-28.6,5.4&width=768&height=718&srs=EPSG:4326&format=image/png&exceptions=application/vnd.ogc.se_inimage&cql_filter=intersects(geom,querySingle('aula:bacia','the_geom','NOME ilike ''%25tal%25'''))
Como existe a chance de ocorrer alguma exceção, então é interessante incluir o parâmetro exceptions na URL, ele irá retornar uma mensagem de erro.

--- INCLUDE E EXCLUDE ---

Tem-se de ter um filtro por camada incluída no parâmetro layers.
Pode-se utilizar para incluir ou excluir camadas de resultados
http://localhost:8080/geoserver/aula/wms?service=WMS&version=1.1.0&request=GetMap&layers=aula:municipio,aula:cidade&bbox=-70,-33.9,-28.6,5.4&width=768&height=718&srs=EPSG:4326&format=image/png&exceptions=application/vnd.ogc.se_inimage&cql_filter=intersects(geom,querySingle('aula:bacia','the_geom','NOME ilike ''%25tal%25'''));exclude

Para alterar os estilos das camadas de resultado é preciso fornecer o parâmetro styles com os estilos das camadas separados por vírgula.
http://localhost:8080/geoserver/aula/wms?service=WMS&version=1.1.0&request=GetMap&styles=aula:pol_amarelo,aula:pt_amarelo&layers=aula:municipio,aula:cidade&bbox=-70,-33.9,-28.6,5.4&width=768&height=718&srs=EPSG:4326&format=image/png&exceptions=application/vnd.ogc.se_inimage&cql_filter=intersects(geom,querySingle('aula:bacia','the_geom','NOME ilike ''%25tal%25''')) ;intersects(the_geom,querySingle('aula:bacia','the_geom','NOME ilike ''%25Amaz%25'''))

--- CQL na criaão de camadas ---

Na opção de criar novas camadas pode-se utilizar também filtros para criação conforme expressões.

*** LIMITE DE MEMÓRIA DAS FUNÇÕES QUERYLAYER ***

As funções queyCollection e collectGeometries executam consultas contra a camada secundária todas as vezes
que são executadas e carregam todo o resultado na memória.

Assim, as funções correm o risco de usar memória excessiva do servidor se o conjunto de daods for muito grande.

Para evitar impactos com servidor alguns limites internos são configurados:
Até 1000 feições podem ser processadoas por queryCollection
Até 37000 coordenadsa podem ser processadas por collectGeometries

Esses limites podem seralterados modificando as variáveis de ambiente do sistema
QUERY_LAYER_MAX_FEATURES
GEOMETRY_COLLECT_MAX_COORDINATES

Deve-se acessar as variáveis de ambiente do sistema e adicinar novas variáveis com os valores desejados






